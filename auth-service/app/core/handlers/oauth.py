"""
–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ OAuth.
"""

import logging

from app.services import AuthService

logger = logging.getLogger(__name__)


async def handle_oauth(
    provider: str, user_data: dict, auth_service: AuthService
) -> dict:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ OAuth.

    Args:
        provider: –ü—Ä–æ–≤–∞–π–¥–µ—Ä OAuth
        user_data: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        auth_service: –°–µ—Ä–≤–∏—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

    Returns:
        –¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –∏ —Ç–∏–ø —Ç–æ–∫–µ–Ω–∞
    """
    logger.info(
        "üîë –ü–æ–ø—ã—Ç–∫–∞ OAuth –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ %s: %s", provider, user_data.get("email")
    )
    try:
        result = await auth_service.oauth_authenticate(provider, user_data)
        logger.info("‚úÖ OAuth –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ –¥–ª—è %s", user_data.get("email"))
        return result
    except Exception as e:
        logger.error("‚ùå –û—à–∏–±–∫–∞ OAuth –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: %s", str(e))
        return {"status_code": 500, "detail": str(e), "error_type": "oauth_error"}
