version: "3.8"

services:
  api_gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    env_file:
      - ./.env.dev
    ports:
      - "8001:8000"
    depends_on:
      auth_service:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      postgres_gateway:
        condition: service_healthy
      redis_gateway:
        condition: service_healthy
    networks:
      - dev-network

  auth_service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    env_file:
      - ./.env.dev
    ports:
      - "8002:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres_auth:
        condition: service_healthy
      redis_auth:
        condition: service_healthy
    networks:
      - dev-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-guest}
      - RABBITMQ_DEFAULT_VHOST=/
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dev-network

  postgres_gateway:
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=gateway_db
    networks:
      - dev-network

  postgres_auth:
    image: postgres:latest
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=auth_db
    networks:
      - dev-network

  redis_gateway:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_GATEWAY_PASSWORD:-gateway_pass}
    networks:
      - dev-network

  redis_auth:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6380:6379"
    command: redis-server --requirepass ${REDIS_AUTH_PASSWORD:-auth_pass}
    networks:
      - dev-network

networks:
  dev-network:
    driver: bridge
